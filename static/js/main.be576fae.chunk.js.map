{"version":3,"sources":["data/question.tsx","QuestionBlock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","questions","question","answer","style","textAlign","followUpQuestion","description","QuestionBlock","props","useState","state","setState","hoverable","className","onClick","onClose","title","_","startCase","camelCase","id","App","setQuestion","questionData","map","quiz","index","Content","onQuestion","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be576fae.chunk.js","sourcesContent":["import { Data } from \"../Types\";\n\nconst data: Data = {\n  questions: [\n    {\n      question: \"Spell the Jewish holiday in December?\",\n      answer: \"Hanukkah or Chanukah\",\n    },\n    {\n      question: (\n        <div>\n          How do you de-gnome a garden?\n          <ul style={{ textAlign: \"left\" }}>\n            <li>Use a disarming charm</li>\n            <li>Swing the gnome around and then drop them over the wall</li>\n            <li>\n              Plant Venomous Tentacula in the garden to ward the gnomes away\n            </li>\n            <li>Tickle the gnome until they run away</li>\n          </ul>\n        </div>\n      ),\n      answer: \"Swing the gnome around and then drop them over the wall\",\n    },\n    {\n      question: \"Which harry potter character is Holy\",\n      answer: \"George Weasley\",\n    },\n    {\n      question: \"When did Disney World Open?\",\n      answer: \"1971\",\n      followUpQuestion: {\n        question: \"When did Disneyland Open?\",\n        answer: \"1955\",\n      },\n    },\n    {\n      question: \"Name all of the 7 dwarves in Snow White?\",\n      answer: \"Doc, Grumpy, Happy, Sleepy, Bashful, Sneezy and Dopey\",\n    },\n    { question: \"How many stripes are there on the US flag?\", answer: \"13\" },\n    {\n      question: \"Until 1923, what was the Turkish city of Istanbul called?\",\n      answer: \"Constantinople\",\n    },\n    { question: \"How many keys does a classic piano have?\", answer: \"88\" },\n    {\n      question:\n        \"In which classic novel is the first line: 'In my younger and more vulnerable years my father gave me some advice that I've been turning over in my mind ever since'?\",\n      answer: \"The Great Gatsby\",\n    },\n    {\n      question: \"Finish this famaus quote 'I never look back, darling!...'\",\n      answer:\n        \"'I never look back, darling! It distracts from the now.' -Edna Mode \",\n    },\n    {\n      question: \"What color is Bing Bong?\",\n      answer: \"Purple\",\n      followUpQuestion: {\n        question: \"What is he made of?\",\n        answer: \"cotton candy, cat, elephant and dolphin\",\n      },\n    },\n    { question: \"What is the name of Dean's car?\", answer: \"Baby\" },\n    { question: \"What does Dean order at a dinner?\", answer: \"Pie\" },\n    { question: \"What is Buffy's weapon called?\", answer: \"Mr Pointy\" },\n    { question: \"What is Anya afraid of?\", answer: \"bunnies\" },\n    {\n      question: \"When did the Red Sox win the World Series?\",\n      answer: \"2018, 2013, 2007, 2004, 1918, 1916, 1915, 1912, 1903\",\n    },\n    {\n      question: \"Who did the Red Sox trade in 2004?\",\n      answer: \"Nomar Garciaparra\",\n    },\n    {\n      question: \"Who is the GOAT?\",\n      answer: \"Tom Brady\",\n      followUpQuestion: {\n        question: \"If your not from Boston?\",\n        answer: \"Jerry Rice\",\n      },\n    },\n    {\n      question: \"Passamaquody\",\n      answer: \"Nonchalant\",\n      followUpQuestion: { question: \"Form of the Word?\", answer: \"chalant\" },\n    },\n\n    // {\n    //   description: \"Wrap this present, blindfolded\",\n    //   followUpQuestion: { description: \"Unwrap this present with oven mitts\" },\n    // },\n    { description: \"Balance a spoon on your nose\" },\n    { description: \"Doughnut on a string\" },\n    { description: \"Stack my nuts\" },\n    {\n      description: \"Cut down the mightiest tree in the forestâ€”with a herring!\",\n    },\n  ],\n};\n\nexport default data;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { QuestionBlockProps } from \"./Types\";\nimport { Card } from \"antd\";\n\nconst QuestionBlock: React.FC<QuestionBlockProps> = (props) => {\n  const [state, setState] = useState(\"number\");\n\n  const block = () => {\n    if (props.description) {\n      return <div>{props.description}</div>;\n    }\n    if (state === \"answer\") {\n      return <div>{props.answer}</div>;\n    }\n    if (state === \"question\") {\n      return <div>{props.question}</div>;\n    }\n    return <div>{props.id}</div>;\n  };\n\n  const changeState = () => {\n    if (state === \"number\") {\n      return \"question\";\n    }\n    if (state === \"question\") {\n      return \"answer\";\n    }\n    if (state === \"answer\") {\n      props.onClose();\n    }\n    return \"number\";\n  };\n\n  return (\n    <>\n      <Card\n        hoverable\n        className=\"App-question-block\"\n        //   onClick={() => {\n        //     console.log(\"click\");\n        //     props.onClick();\n        //   }}\n        onClick={() => setState(changeState())}\n        title={state === \"number\" ? null : _.startCase(_.camelCase(state))}\n      >\n        {block()}\n      </Card>\n      {state === \"answer\" && props.followUpQuestion && (\n        <QuestionBlock\n          id={\"Follow Up Question\"}\n          onClose={props.onClose}\n          {...props.followUpQuestion}\n          state={\"number\"}\n        />\n      )}\n    </>\n  );\n};\n\nexport default QuestionBlock;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport \"./App.less\";\nimport data from \"./data/question\";\nimport { Layout, Row, Col, Button, Card } from \"antd\";\nimport { QuestionBlockProps, Question } from \"./Types\";\nimport QuestionBlock from \"./QuestionBlock\";\n\nfunction App() {\n  const [question, setQuestion] = useState<QuestionBlockProps | null>();\n\n  const defaultState = \"number\";\n\n  const questionData = {\n    questions: data.questions.map((quiz, index) => {\n      return {\n        ...{ id: index + 1, state: defaultState },\n        ...quiz,\n      };\n    }),\n  };\n\n  const onQuestion = (question: Question) => {\n    //const newQuiz = { state: \"number\", ...rest };\n    setQuestion({ ...question });\n  };\n  const onCloseQuestion = () => {\n    setQuestion(null);\n  };\n\n  return (\n    <Layout>\n      <div className=\"App\">\n        <div className=\"App-body\">\n          {!question && (\n            <Layout.Content>\n              <Row>\n                {questionData.questions.map((quiz, index) => {\n                  return (\n                    <Col\n                      key={index}\n                      onClick={() => onQuestion(quiz)}\n                      className={\"App-questions\"}\n                    >\n                      <Card hoverable className=\"App-question-block\">\n                        {index + 1}\n                      </Card>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </Layout.Content>\n          )}\n          {question && (\n            <Layout.Content>\n              <QuestionBlock\n                {...question}\n                state={\"number\"}\n                onClose={onCloseQuestion}\n              />\n            </Layout.Content>\n          )}\n\n          <Layout.Footer>\n            {question && (\n              <Button onClick={() => setQuestion(null)}>Reset </Button>\n            )}\n          </Layout.Footer>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}